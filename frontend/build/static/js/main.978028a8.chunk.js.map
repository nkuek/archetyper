{"version":3,"sources":["providers/IndexProvider.tsx","languages/wordListGenerator.ts","hooks/useFocus.ts","hooks/useQuote.ts","hooks/useReset.ts","hooks/useLocalStorage.ts","providers/WordListProvider.tsx","providers/WordProvider.tsx","providers/ThemeProvider/useThemeList.ts","providers/ThemeProvider/index.tsx","providers/SettingsProvider.tsx","providers/InputProvider.tsx","components/WordBox/Char.tsx","components/WordBox/Word.tsx","components/WordBox/styles.ts","components/WordBox/MessageOverlay.tsx","components/CustomTooltip/index.tsx","components/WordBox/index.tsx","components/WordOptions/styles.ts","components/WordOptions/WordTypeOptions.tsx","components/WordOptions/WordCountOptions.tsx","components/WordOptions/QuoteOptions.tsx","components/WordOptions/WordOption.tsx","components/WordOptions/TimedOptions.tsx","components/WordOptions/Wpm.tsx","components/WordOptions/index.tsx","components/Stats/DataDisplay.tsx","components/Stats/CustomX.tsx","components/Stats/CustomPayload.tsx","components/Stats/CustomTooltip.tsx","components/HeatMap/Key.tsx","components/HeatMap/KeyRow.tsx","components/HeatMap/index.tsx","components/Stats/index.tsx","components/Dialog/index.tsx","components/Settings/SettingsWrapper.tsx","components/Settings/Themes.tsx","components/Settings/Languages.tsx","components/Settings/index.tsx","components/AboutMe/index.tsx","components/Tip/index.tsx","app/App.tsx","index.tsx"],"names":["IndexContext","createContext","undefined","IndexProvider","children","useState","currentCharIndex","setCurrentCharIndex","currentWordIndex","setCurrentWordIndex","top","left","caretSpacing","setCaretSpacing","userWordIndex","setUserWordIndex","Provider","value","languageMap","english","spanish","vietnamese","numbersList","specialCharsList","randomizeWords","settings","single","capitalChars","specialChars","numbers","language","words","createWord","word","Math","floor","random","length","toUpperCase","slice","specialChar","number","i","randomized","push","useFocus","textFieldRef","useContext","WordContext","setFocused","SettingsContext","current","focus","paramsMap","short","medium","long","all","useQuote","WordListContext","setWordList","setWordCount","setLoading","author","setAuthor","quoteParams","setErrorMessage","getQuote","useCallback","fetch","then","response","json","quote","quoteContent","content","split","setTimeout","catch","error","message","includes","useMemo","useReset","randomize","wordList","wordCount","setHeatMapData","setWpmData","setWordBoxConfig","InputContext","setUserInput","timer","setTimer","setWpm","setInputHistory","defaultTimer","e","stopPropagation","wordBox","document","getElementById","scrollTop","id","type","defaultWordBoxConfig","net","raw","clearInterval","useLocalStorage","key","defaultValue","initialValue","savedValue","localStorage","getItem","JSON","parse","Object","keys","every","Function","getSavedValue","setValue","useEffect","setItem","stringify","WordListProvider","LSWordCount","setLSWordCount","loading","setQuoteParams","errorMessage","charList","setCharList","wordOptions","name","charCount","incorrectChars","uncorrectedErrors","WordContextProvider","wpmData","heatMapData","wordBoxConfig","generateCharList","wordChars","char","correct","chars","currentWordRef","useRef","scrollIntoView","block","offsetTop","offsetLeft","useThemeList","getBrowserThemeMq","window","matchMedia","matches","isDarkTheme","setIsDarkTheme","setBrowserTheme","addEventListener","removeEventListener","buttonBackground","buttonText","pageBackground","wordBoxBackground","currentWord","currentChar","wordsContrast","graphText","lineColor","headings","gradientUnderline","cartesian","disabled","lineColor2","legendBackground","incorrect","mizu","gruvbox","phantom","jade","default","border","ThemeContext","ThemeProvider","themeList","themeName","setThemeName","favicon","href","textColor","theme","defaultSettings","SettingsProvider","setSettings","focused","randomizedWords","InputProvider","userInput","timeOption","setTimeOption","wpm","inputHistory","time","_time","countdown","Char","props","charIdx","wordIdx","displayExtraChar","charRef","node","offsetWidth","color","extra","ref","Word","showWord","setShowWord","wordRef","observer","IntersectionObserver","obs","isIntersecting","unobserve","root","rootMargin","observe","disconnect","sx","display","margin","textDecoration","skipped","flexWrap","className","map","animation","keyframes","slowAnimation","MessageOverlay","makeStyles","show","visibility","position","zIndex","height","width","justifyContent","alignItems","textAlign","background","cursor","backgroundColor","StyledTooltip","withStyles","tooltip","fontSize","borderRadius","padding","arrow","Tooltip","CustomTooltip","Title","disableInteractive","title","Typography","WordBox","setShowTip","setShowWarning","muiTheme","useTheme","mobileDevice","useMediaQuery","breakpoints","down","handleReset","caretStyling","transition","newWord","prev","errors","timeToMins","max","calculateWpm","intervalTimer","setInterval","capsLockListener","getModifierState","Container","onClick","disableGutters","Box","style","overflow","values","filter","fontStyle","CircularProgress","opacity","boxSizing","onChange","target","lastUserChar","missingChars","extraChars","forEach","totalWordErrors","wordNum","isCorrect","mistyped","autoFocus","onKeyDown","decrementWord","resetWord","index","newUncorrectErrors","previousWord","autoCapitalize","autoCorrect","autoComplete","Button","useWordOptionTheme","optionContainerStyle","getOptionStyle","condition","fontWeight","getOptionTypographyStyle","lineHeight","borderColor","WordTypeOptions","setting","idx","options","WordCountOptions","setNeedReset","flexDirection","option","String","fromCharCode","QuoteOptions","WordOption","showOptions","setShowOptions","onMouseEnter","onMouseLeave","TimedOptions","Wpm","alignSelf","marginRight","categories","WordOptions","needReset","handleClick","reset","marginBottom","DataDisplay","data","unit","renderContent","CustomX","payload","xmlns","fill","viewBox","x","y","d","CustomPayload","label","line","strike","underline","legend","active","payloadWrapperStyle","marginTop","stroke","Key","keyProp","primary","secondary","modifier","size","letterProps","marginLeft","displayTooltip","toLowerCase","paddingBottom","match","renderTooltip","KeyRow","HeatMap","xs","md","rows","row","Stats","smallScreen","totalErrors","total","accuracy","toFixed","round","ResponsiveContainer","ComposedChart","right","bottom","CartesianGrid","XAxis","dataKey","Label","YAxis","yAxisId","angle","dx","orientation","allowDecimals","interval","Legend","verticalAlign","wrapperStyle","Line","dot","strokeWidth","legendType","Scatter","shape","Dialog","open","onClose","PaperProps","DialogTitle","DialogContent","DialogActions","textTransform","SettingsWrapper","defaultTitle","renderTitle","Grid","container","spacing","Themes","themeListItem","item","sm","disableRipple","bgcolor","transform","Languages","Select","MenuItem","Settings","aboutMeLinks","Icon","link","AboutMe","IconButton","rel","Tip","showTip","tip","warning","App","settingsDialogOpen","setSettingsDialogOpen","aboutMeOpen","setAboutMeOpen","showWarning","closeDialog","setDialog","handleEscape","getElementsByTagName","click","dialogOpen","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","displayStats","fontFamily","minHeight","ReactDOM","render","StrictMode","WordProvider"],"mappings":"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","file":"static/js/main.978028a8.chunk.js","sourcesContent":["import React, { FC, createContext, useState } from 'react';\nimport { TReactSetState } from './general/types';\n\ninterface ICaret {\n  top: number;\n  left: number;\n}\n\ninterface IIndexContext {\n  currentCharIndex: number;\n  setCurrentCharIndex: TReactSetState<number>;\n  currentWordIndex: number;\n  setCurrentWordIndex: TReactSetState<number>;\n  userWordIndex: number;\n  setUserWordIndex: TReactSetState<number>;\n  caretSpacing: ICaret;\n  setCaretSpacing: TReactSetState<ICaret>;\n}\n\nexport const IndexContext = createContext<IIndexContext>(undefined!);\n\nconst IndexProvider: FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [caretSpacing, setCaretSpacing] = useState({ top: 0, left: 0 });\n  const [userWordIndex, setUserWordIndex] = useState(0);\n\n  return (\n    <IndexContext.Provider\n      value={{\n        currentCharIndex,\n        setCurrentCharIndex,\n        currentWordIndex,\n        setCurrentWordIndex,\n        caretSpacing,\n        setCaretSpacing,\n        userWordIndex,\n        setUserWordIndex,\n      }}\n    >\n      {children}\n    </IndexContext.Provider>\n  );\n};\n\nexport default IndexProvider;\n","import { ISettings } from 'providers/SettingsProvider';\nimport english from './english.json';\nimport vietnamese from './vietnamese.json';\nimport spanish from './spanish.json';\nimport englishMisspellings from './englishMisspellings.json';\n\nexport const languageMap = {\n  english,\n  'english - commonly misspelled': englishMisspellings,\n  spanish,\n  vietnamese,\n};\n\nconst numbersList = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nconst specialCharsList = ['\"', '!', '?', ':', ';', '/', '(', '-', \"'\"];\n\nconst maxNumLength = 6;\nexport const maxWords = 40;\n\n// create overload function based on the single parameter\nfunction randomizeWords(settings: ISettings, single: boolean): string;\nfunction randomizeWords(settings: ISettings): string[];\n\nfunction randomizeWords(settings: ISettings, single?: boolean) {\n  const { capitalChars, specialChars, numbers, language } = settings;\n\n  const words = languageMap[language];\n  const createWord = () => {\n    let word = words[Math.floor(Math.random() * words.length)];\n    if (capitalChars) {\n      const shouldCapitalize = Math.random() > 0.6;\n      word = shouldCapitalize ? word[0].toUpperCase() + word.slice(1) : word;\n    }\n    if (specialChars) {\n      const shouldAddSpecial = Math.random() > 0.4;\n      if (shouldAddSpecial) {\n        const specialChar =\n          specialCharsList[Math.floor(Math.random() * specialCharsList.length)];\n        switch (specialChar) {\n          case '\"':\n          case \"'\":\n            word = `${specialChar}${word}${specialChar}`;\n            break;\n          case '(':\n            word = `(${word})`;\n            break;\n          default:\n            word += specialChar;\n        }\n      }\n    }\n    if (numbers) {\n      const shouldAddNumbers = Math.random() > 0.7;\n      if (shouldAddNumbers) {\n        const length = Math.random() * maxNumLength;\n        let number = '';\n        for (let i = 0; i < length; i++) {\n          number += numbersList[Math.floor(Math.random() * 10)];\n        }\n        word = number;\n      }\n    }\n    return word;\n  };\n\n  if (single) {\n    return createWord();\n  }\n\n  const randomized: string[] = [];\n  while (randomized.length < maxWords) {\n    randomized.push(createWord());\n  }\n  return randomized;\n}\n\nexport default randomizeWords;\n","import { SettingsContext, WordContext } from 'providers';\nimport { useContext } from 'react';\n\nconst useFocus = () => {\n  const { textFieldRef } = useContext(WordContext);\n  const { setFocused } = useContext(SettingsContext);\n\n  return () => {\n    if (!textFieldRef.current) return;\n    textFieldRef.current.focus();\n    setFocused(true);\n  };\n};\n\nexport default useFocus;\n","import { WordListContext } from 'providers';\nimport { useCallback, useContext, useMemo } from 'react';\n\ninterface IQuote {\n  content: string;\n  author: string;\n}\n\nconst paramsMap = {\n  short: '?maxLength=100',\n  medium: '?minLength=140&maxLength=180',\n  long: '?minLength=200',\n  all: '',\n};\n\nconst useQuote = () => {\n  const {\n    setWordList,\n    setWordCount,\n    setLoading,\n    author,\n    setAuthor,\n    quoteParams,\n    setErrorMessage,\n  } = useContext(WordListContext);\n\n  const getQuote = useCallback(() => {\n    setLoading(true);\n    fetch(`https://api.quotable.io/random${paramsMap[quoteParams]}`)\n      .then((response) => response.json())\n      .then((quote: IQuote) => {\n        const quoteContent = quote.content.split(' ');\n        setAuthor(quote.author);\n        setWordList(quoteContent);\n        setWordCount(quoteContent.length);\n        setTimeout(() => {\n          setLoading(false);\n        }, 100);\n      })\n      .catch((error) => {\n        if (error.message.includes('Failed to fetch')) {\n          setLoading(false);\n          setErrorMessage(\n            'there was a problem loading this quote. please ensure you have a stable network connection.'\n          );\n        } else {\n          setErrorMessage(\n            'something went wrong. try refreshing the page and ensure you have a stable network connection.'\n          );\n        }\n      });\n  }, [\n    setWordList,\n    setWordCount,\n    setLoading,\n    setAuthor,\n    quoteParams,\n    setErrorMessage,\n  ]);\n  return useMemo(\n    () => ({\n      getQuote,\n      author,\n    }),\n    [getQuote, author]\n  );\n};\n\nexport default useQuote;\n","import {\n  IndexContext,\n  InputContext,\n  SettingsContext,\n  WordContext,\n} from 'providers';\nimport { WordListContext } from 'providers/WordListProvider';\nimport { defaultWordBoxConfig } from 'providers/WordProvider';\nimport { useCallback, useContext } from 'react';\nimport randomizeWords from 'languages/wordListGenerator';\nimport useFocus from './useFocus';\nimport useQuote from './useQuote';\n\nconst useReset = (randomize = false) => {\n  const {\n    wordList,\n    setWordList,\n    setAuthor,\n    setErrorMessage,\n    setWordCount,\n    wordCount,\n  } = useContext(WordListContext);\n  const { setHeatMapData, setWpmData, setWordBoxConfig } =\n    useContext(WordContext);\n\n  const { settings } = useContext(SettingsContext);\n\n  const {\n    setUserInput,\n    timer,\n    setTimer,\n    setWpm,\n    setInputHistory,\n    defaultTimer,\n  } = useContext(InputContext);\n\n  const {\n    currentCharIndex,\n    currentWordIndex,\n    setCurrentCharIndex,\n    setCurrentWordIndex,\n    setUserWordIndex,\n  } = useContext(IndexContext);\n\n  const { getQuote } = useQuote();\n\n  const focus = useFocus();\n\n  return useCallback(\n    (\n      e?: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLSpanElement>\n    ) => {\n      e?.stopPropagation();\n      const wordBox = document.getElementById('wordBox');\n      if (wordBox) wordBox.scrollTop = 0;\n      // if a user has not started a test or has finished the test, give them a new word list\n      if ((!timer.id && !currentWordIndex && !currentCharIndex) || randomize) {\n        if (settings.type === 'quotes') {\n          getQuote();\n        } else {\n          setWordList(randomizeWords(settings));\n          setWordCount(wordCount);\n          setAuthor(null);\n        }\n        // otherwise reset to the current word list\n      } else {\n        setWordList([...wordList]);\n      }\n\n      setUserInput('');\n      setInputHistory([]);\n      setWordBoxConfig(defaultWordBoxConfig);\n      setCurrentCharIndex(0);\n      setCurrentWordIndex(0);\n      setUserWordIndex(0);\n      setWpm({ net: 0, raw: 0 });\n      setWpmData({});\n      setHeatMapData({});\n      setErrorMessage(null);\n\n      if (timer.id) {\n        clearInterval(timer.id);\n      }\n\n      setTimer(defaultTimer);\n      setTimeout(() => {\n        focus();\n      }, 1);\n    },\n    [\n      setWordList,\n      timer,\n      setTimer,\n      setWpm,\n      setWpmData,\n      setHeatMapData,\n      setUserInput,\n      randomize,\n      settings,\n      getQuote,\n      setAuthor,\n      setInputHistory,\n      setWordBoxConfig,\n      wordList,\n      currentCharIndex,\n      setCurrentCharIndex,\n      currentWordIndex,\n      setCurrentWordIndex,\n      setUserWordIndex,\n      setErrorMessage,\n      focus,\n      setWordCount,\n      wordCount,\n      defaultTimer,\n    ]\n  );\n};\n\nexport default useReset;\n","import { useEffect, useState } from 'react';\n\nexport const getSavedValue = <T>(key: string, initialValue: T) => {\n  const savedValue =\n    localStorage.getItem(key) && JSON.parse(localStorage.getItem(key) || '');\n  if (savedValue) {\n    // in case there are any new keys added that aren't in user's local storage, check and add here to prevent errors\n    if (\n      typeof savedValue === 'object' &&\n      !Object.keys(initialValue).every((key) => savedValue[key])\n    ) {\n      return { ...initialValue, ...savedValue };\n    }\n    return savedValue;\n  }\n  if (initialValue instanceof Function) return initialValue();\n  return initialValue;\n};\n\nconst useLocalStorage = <T>(key: string, defaultValue?: T) => {\n  const [value, setValue] = useState(() => getSavedValue(key, defaultValue));\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useLocalStorage } from 'hooks';\nimport { createContext, FC, useMemo, useState } from 'react';\nimport { TReactSetState, TCountOption } from './general/types';\ninterface IWordListContext {\n  wordList: string[];\n  setWordList: TReactSetState<string[]>;\n  wordCount: TCountOption;\n  setWordCount: TReactSetState<TCountOption>;\n  loading: boolean;\n  setLoading: TReactSetState<boolean>;\n  author: string | null;\n  setAuthor: TReactSetState<null | string>;\n  charList: ICharList;\n  setCharList: TReactSetState<ICharList>;\n  quoteParams: TQuoteParam;\n  setQuoteParams: TReactSetState<TQuoteParam>;\n  errorMessage: string | null;\n  setErrorMessage: TReactSetState<string | null>;\n  LSWordCount: TCountOption;\n  setLSWordCount: TReactSetState<TCountOption>;\n}\n\nexport type TWordChar = {\n  correct: null | boolean;\n  extra?: boolean;\n  char: string;\n  skipped?: boolean;\n  mistyped?: boolean;\n};\n\nexport interface IChars {\n  chars: TWordChar[];\n  skipped?: boolean;\n  length: number;\n  word: string;\n}\n\nexport interface ICharList {\n  [key: string | number]: IChars;\n}\n\nexport type TQuoteParam = 'short' | 'medium' | 'long' | 'all';\n\nexport const WordListContext = createContext<IWordListContext>(undefined!);\n\nconst WordListProvider: FC = ({ children }) => {\n  const [LSWordCount, setLSWordCount] = useLocalStorage<TCountOption>(\n    'typer-word-count',\n    25\n  );\n  const [wordList, setWordList] = useState<string[]>([]);\n  const [wordCount, setWordCount] = useState(LSWordCount);\n  const [loading, setLoading] = useState(false);\n  const [author, setAuthor] = useState<null | string>(null);\n  const [quoteParams, setQuoteParams] = useLocalStorage<TQuoteParam>(\n    'typer-quote-length',\n    'medium'\n  );\n\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const [charList, setCharList] = useState<ICharList>({});\n\n  const value = useMemo(\n    () => ({\n      wordList,\n      setWordList,\n      wordCount,\n      setWordCount,\n      loading,\n      setLoading,\n      author,\n      setAuthor,\n      charList,\n      setCharList,\n      quoteParams,\n      setQuoteParams,\n      errorMessage,\n      setErrorMessage,\n      LSWordCount,\n      setLSWordCount,\n    }),\n    [\n      wordList,\n      setWordList,\n      wordCount,\n      setWordCount,\n      loading,\n      setLoading,\n      author,\n      setAuthor,\n      charList,\n      setCharList,\n      quoteParams,\n      setQuoteParams,\n      errorMessage,\n      setErrorMessage,\n      LSWordCount,\n      setLSWordCount,\n    ]\n  );\n  return (\n    <WordListContext.Provider value={value}>\n      {children}\n    </WordListContext.Provider>\n  );\n};\n\nexport default WordListProvider;\n","import {\n  createContext,\n  useState,\n  FC,\n  useEffect,\n  useMemo,\n  useRef,\n  useContext,\n  useCallback,\n} from 'react';\nimport { TReactSetState } from './general/types';\nimport { IndexContext } from './IndexProvider';\nimport { IWpm } from './InputProvider';\nimport { ICharList, TWordChar, WordListContext } from './WordListProvider';\n\ninterface ITimeStepData {\n  wordNum: number;\n  word: TWordChar[];\n  wpm: IWpm;\n  errors: number;\n  missingChars: number;\n  extraChars: number;\n  incorrectChars: number;\n}\n\ninterface IWPMData {\n  [key: number | string]: ITimeStepData;\n}\n\ninterface IHeatMapData {\n  [key: string]: {\n    correct: number;\n    incorrect: number;\n  };\n}\n\nexport interface IWordBoxConfig {\n  charCount: number;\n  incorrectChars: number;\n  uncorrectedErrors: number;\n}\n\ninterface IWordContext {\n  wpmData: IWPMData;\n  setWpmData: TReactSetState<IWPMData>;\n  currentWordRef: React.MutableRefObject<HTMLDivElement | null>;\n  textFieldRef: React.RefObject<HTMLInputElement>;\n  wordBoxConfig: IWordBoxConfig;\n  setWordBoxConfig: TReactSetState<IWordBoxConfig>;\n  generateCharList: (wordList: string[] | string) => ICharList;\n  heatMapData: IHeatMapData;\n  setHeatMapData: TReactSetState<IHeatMapData>;\n}\n\nexport const WordContext = createContext<IWordContext>(undefined!);\n\nexport const wordOptions = [\n  { name: 'capital', value: 'capitalChars' },\n  { name: 'special', value: 'specialChars' },\n  { name: 'numbers', value: 'numbers' },\n] as const;\n\nexport const defaultWordBoxConfig = {\n  charCount: 0,\n  incorrectChars: 0,\n  uncorrectedErrors: 0,\n};\n\nconst WordContextProvider: FC = ({ children }) => {\n  const { loading } = useContext(WordListContext);\n  const { setCaretSpacing, currentWordIndex } = useContext(IndexContext);\n\n  const [wpmData, setWpmData] = useState<IWPMData>({});\n  const [heatMapData, setHeatMapData] = useState<IHeatMapData>({});\n  const [wordBoxConfig, setWordBoxConfig] =\n    useState<IWordBoxConfig>(defaultWordBoxConfig);\n\n  const generateCharList = useCallback((wordList: string[] | string) => {\n    const charList: ICharList = {};\n    if (wordList.length) {\n      for (let i = 0; i < wordList.length; i++) {\n        const word = wordList[i];\n        const wordChars: TWordChar[] = [];\n        for (const char of word) {\n          wordChars.push({\n            correct: null,\n            char,\n          });\n        }\n        charList[i] = {\n          chars: wordChars,\n          length: word.length,\n          word,\n        };\n      }\n    }\n    return charList;\n  }, []);\n\n  const currentWordRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!currentWordRef.current || loading) return;\n    currentWordRef.current.scrollIntoView({ block: 'center' });\n    setTimeout(() => {\n      if (!currentWordRef.current) return;\n      setCaretSpacing({\n        top: currentWordRef.current.offsetTop,\n        left: currentWordRef.current.offsetLeft,\n      });\n    }, 25);\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentWordIndex]);\n\n  const textFieldRef = useRef<HTMLInputElement>(null);\n\n  const value = useMemo(\n    () => ({\n      wordBoxConfig,\n      setWordBoxConfig,\n      wpmData,\n      setWpmData,\n      currentWordRef,\n      textFieldRef,\n      generateCharList,\n      heatMapData,\n      setHeatMapData,\n    }),\n    [\n      wpmData,\n      setWpmData,\n      currentWordRef,\n      textFieldRef,\n      wordBoxConfig,\n      setWordBoxConfig,\n      generateCharList,\n      heatMapData,\n      setHeatMapData,\n    ]\n  );\n  return <WordContext.Provider value={value}>{children}</WordContext.Provider>;\n};\n\nexport default WordContextProvider;\n","import { useEffect, useMemo, useState } from 'react';\n\nexport interface ITheme {\n  buttonBackground: string;\n  buttonText?: string;\n  pageBackground: string;\n  wordBoxBackground: string;\n  currentWord: string;\n  currentChar: string;\n  words: string;\n  correct: string;\n  wordsContrast?: string;\n  graphText?: string;\n  lineColor?: string;\n  lineColor2?: string;\n  headings: string;\n  gradientUnderline?: string[];\n  cartesian?: string;\n  border?: string;\n  incorrect?: string;\n  disabled?: string;\n  legendBackground?: string;\n}\n\nexport interface IThemeList {\n  [key: string]: ITheme;\n}\nconst useThemeList = () => {\n  const getBrowserThemeMq = () =>\n    window.matchMedia('(prefers-color-scheme: dark)');\n\n  const [isDarkTheme, setIsDarkTheme] = useState(getBrowserThemeMq().matches);\n\n  useEffect(() => {\n    const setBrowserTheme = (e: MediaQueryListEvent) => {\n      setIsDarkTheme(e.matches);\n    };\n    getBrowserThemeMq().addEventListener('change', setBrowserTheme);\n    return () =>\n      getBrowserThemeMq().removeEventListener('change', setBrowserTheme);\n  }, []);\n\n  return useMemo<IThemeList>(\n    () => ({\n      1976: {\n        buttonBackground:\n          'linear-gradient(135deg, rgb(93, 207, 184) 20%, rgb(215, 56, 17) 20%, rgb(215, 56, 17) 40%, rgb(225, 107, 6) 40%, rgb(225, 107, 6) 60%, rgb(225, 186, 69) 60%, rgb(225, 186, 69) 80%, rgb(91, 50, 23) 80%)',\n        buttonText: '#66d2bc',\n        pageBackground:\n          'linear-gradient(135deg, rgb(93, 207, 184) 20%, rgb(215, 56, 17) 20%, rgb(215, 56, 17) 40%, rgb(225, 107, 6) 40%, rgb(225, 107, 6) 60%, rgb(225, 186, 69) 60%, rgb(225, 186, 69) 80%, rgb(91, 50, 23) 80%)',\n        wordBoxBackground: '#492812',\n        currentWord: 'hsl(28deg 94% 58%)',\n        currentChar: 'hsl(28deg 94% 30%)',\n        words: '#66d2bc',\n        correct: 'hsl(45deg 72% 60%)',\n        wordsContrast: 'rgb(33, 38, 45)',\n        graphText: 'hsl(45deg 72% 58%)',\n        lineColor: '#66d2bc',\n        headings: 'black',\n        gradientUnderline: ['#d73811', '#e1ba45'],\n        cartesian: 'hsl(45deg 72% 58%)',\n        disabled: '#ddd',\n        lineColor2: 'hsl(45deg 72% 58%)',\n      },\n      8008: {\n        buttonBackground: 'hsl(215deg 18% 29%)',\n        buttonText: 'hsl(342deg 88% 63%)',\n        pageBackground: 'hsl(215deg 18% 29%)',\n        wordBoxBackground: 'hsl(213deg 17% 69%)',\n        currentWord: 'hsl(342deg 88% 63%)',\n        currentChar: 'hsl(342deg 88% 33%)',\n        words: '#3c4756',\n        correct: '#6f7b8a',\n        graphText: 'black',\n        lineColor: 'hsl(342deg 88% 63%)',\n        gradientUnderline: ['#6f7b8a', 'hsl(342deg 88% 63%)'],\n        headings: 'hsl(342deg 88% 63%)',\n        wordsContrast: 'hsl(342deg 88% 63%)',\n        lineColor2: 'hsl(215deg 18% 29%)',\n        legendBackground: 'white',\n        incorrect: '#e00000',\n      },\n      mizu: {\n        buttonBackground: '#253746',\n        buttonText: 'white',\n        pageBackground: '#253746',\n        wordBoxBackground: '#b9d9eb',\n        currentWord: 'hsl(269deg 67% 66%)',\n        currentChar: 'hsl(269deg 67% 36%)',\n        words: '#253746',\n        correct: '#68b723',\n        lineColor: 'hsl(269deg 67% 66%)',\n        headings: 'white',\n        wordsContrast: 'white',\n        cartesian: '#253746',\n        gradientUnderline: ['#b9d9eb', 'hsl(269deg 67% 66%)'],\n      },\n      gruvbox: {\n        buttonBackground: '#171812',\n        buttonText: '#A6E22E',\n        pageBackground: '#171812',\n        wordBoxBackground: '#272822',\n        currentWord: 'hsl(190deg 81% 67%)',\n        currentChar: 'hsl(190deg 81% 37%)',\n        words: 'white',\n        correct: '#A6E22E',\n        lineColor: 'hsl(190deg 81% 67%)',\n        headings: '#A6E22E',\n        wordsContrast: '#A6E22E',\n        cartesian: 'white',\n        graphText: '#A6E22E',\n        gradientUnderline: ['#272822', '#A6E22E'],\n      },\n      phantom: {\n        buttonBackground: '#211333',\n        buttonText: '#eed484',\n        pageBackground: '#211333',\n        wordBoxBackground: '#2e1a47',\n        currentWord: 'hsl(269deg 67% 66%)',\n        currentChar: 'hsl(269deg 67% 46%)',\n        words: '#eed484',\n        correct: '#68b723',\n        lineColor: '#966FD6',\n        headings: '#eed484',\n        wordsContrast: '#eed484',\n        cartesian: '#eed484',\n        graphText: '#eed484',\n        gradientUnderline: ['#2e1a47', '#eed484'],\n      },\n      jade: {\n        buttonBackground: '#1B4B43',\n        buttonText: '#f5d680',\n        pageBackground: '#1B4B43',\n        wordBoxBackground: '#4A756E',\n        currentWord: 'hsl(44deg, 85%, 73%)',\n        currentChar: 'hsl(44deg, 85%, 43%)',\n        words: '#cdcdcd',\n        correct: '#CAB19B',\n        headings: '#cdcdcd',\n        wordsContrast: '#cdcdcd',\n        graphText: 'hsl(44deg, 85%, 73%)',\n        cartesian: '#CAB19B',\n        lineColor: 'hsl(44deg, 85%, 73%)',\n        gradientUnderline: ['#4A756E', 'hsl(44deg, 85%, 73%)'],\n      },\n      default: {\n        buttonBackground: isDarkTheme ? '#010409' : 'white',\n        pageBackground: isDarkTheme ? '#010409' : 'white',\n        wordBoxBackground: isDarkTheme ? '#0e1117' : 'white',\n        currentWord: 'plum',\n        currentChar: 'darkmagenta',\n        words: isDarkTheme ? 'rgb(201, 209, 217)' : 'black',\n        correct: 'green',\n        headings: isDarkTheme ? 'rgb(201, 209, 217)' : 'black',\n        border: `1px solid ${isDarkTheme ? 'rgb(33, 38, 45)' : 'black'}`,\n        disabled: '#ddd',\n        lineColor2: 'darkmagenta',\n        legendBackground: isDarkTheme ? '#0e1117' : 'white',\n        gradientUnderline: ['darkmagenta', 'plum'],\n      },\n    }),\n    [isDarkTheme]\n  );\n};\n\nexport default useThemeList;\n","import { TReactSetState } from '../general/types';\nimport { createContext, FC, useMemo, useEffect } from 'react';\nimport { useLocalStorage } from 'hooks';\nimport useThemeList, { ITheme } from './useThemeList';\n\ninterface IThemeContext {\n  themeName: string;\n  setThemeName: TReactSetState<string>;\n  theme: ITheme;\n  textColor: string;\n}\n\nexport const ThemeContext = createContext<IThemeContext>(undefined!);\n\nconst ThemeProvider: FC = ({ children }) => {\n  const themeList = useThemeList();\n  const [themeName, setThemeName] = useLocalStorage('typer-theme', 'default');\n\n  const favicon = document.getElementById('favicon') as HTMLLinkElement;\n\n  useEffect(() => {\n    favicon!.href = `/${themeName}Favicon.ico`;\n  }, [themeName, favicon]);\n\n  const textColor = useMemo(\n    () => themeList[themeName].wordsContrast || themeList[themeName].words,\n    [themeName, themeList]\n  );\n\n  const value = useMemo(\n    () => ({\n      themeName,\n      setThemeName,\n      theme: themeList[themeName],\n      textColor,\n    }),\n    [themeName, setThemeName, textColor, themeList]\n  );\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocalStorage, useQuote } from 'hooks';\nimport { TReactSetState } from './general/types';\nimport { WordListContext } from './WordListProvider';\nimport randomizedWords, { languageMap } from 'languages/wordListGenerator';\n\nexport interface ISettings {\n  specialChars: boolean;\n  capitalChars: boolean;\n  numbers: boolean;\n  type: 'quotes' | 'words' | 'timed';\n  language: keyof typeof languageMap;\n}\n\nexport interface ISettingsContext {\n  settings: ISettings;\n  setSettings: TReactSetState<ISettings>;\n  focused: boolean;\n  setFocused: TReactSetState<boolean>;\n}\n\nexport const defaultSettings: ISettings = {\n  capitalChars: false,\n  specialChars: false,\n  numbers: false,\n  type: 'words',\n  language: 'english',\n};\n\nexport const SettingsContext = createContext<ISettingsContext>(null!);\n\nconst SettingsProvider: FC = ({ children }) => {\n  const [settings, setSettings] = useLocalStorage(\n    'typer-settings',\n    defaultSettings\n  );\n\n  const { setWordList, setAuthor, quoteParams } = useContext(WordListContext);\n\n  const { getQuote } = useQuote();\n\n  const [focused, setFocused] = useState(true);\n\n  useEffect(() => {\n    if (settings.type !== 'quotes') {\n      setWordList(randomizedWords(settings));\n      setAuthor(null);\n      // asynchronous timeout to generate new word list before focusing\n      setTimeout(() => {\n        setFocused(true);\n      }, 1);\n    } else {\n      getQuote();\n      setFocused(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings, quoteParams]);\n\n  const value = useMemo(\n    () => ({\n      settings,\n      setSettings,\n      focused,\n      setFocused,\n    }),\n    [settings, setSettings, focused, setFocused]\n  );\n\n  return (\n    <SettingsContext.Provider value={value}>\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n","import { useLocalStorage } from 'hooks';\nimport {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { TReactSetState, TCountOption } from './general/types';\nimport { SettingsContext } from './SettingsProvider';\n\ninterface ITimerConfig {\n  id?: null | NodeJS.Timeout;\n  time: number;\n  _time: number | 'endless';\n  countdown?: boolean;\n}\n\nexport interface IWpm {\n  raw: number;\n  net: number;\n}\n\nexport interface IInputContext {\n  userInput: string;\n  setUserInput: TReactSetState<string>;\n  timeOption: TCountOption;\n  setTimeOption: TReactSetState<TCountOption>;\n  timer: ITimerConfig;\n  setTimer: TReactSetState<ITimerConfig>;\n  wpm: IWpm;\n  setWpm: TReactSetState<IWpm>;\n  inputHistory: string[];\n  setInputHistory: TReactSetState<string[]>;\n  defaultTimer: ITimerConfig;\n}\n\nexport const InputContext = createContext<IInputContext>(null!);\n\nconst InputProvider: FC = ({ children }) => {\n  const [userInput, setUserInput] = useState('');\n\n  const [timeOption, setTimeOption] = useLocalStorage<TCountOption>(\n    'typer-time',\n    30\n  );\n  const { settings } = useContext(SettingsContext);\n  const [wpm, setWpm] = useState({ raw: 0, net: 0 });\n  const [inputHistory, setInputHistory] = useState<string[]>([]);\n  const defaultTimer = useMemo(\n    () => ({\n      id: null,\n      time:\n        settings.type === 'timed' && timeOption !== 'endless' ? timeOption : 1,\n      _time: settings.type === 'timed' ? timeOption : 1,\n      countdown: settings.type === 'timed' && timeOption !== 'endless',\n    }),\n    [settings.type, timeOption]\n  );\n  const [timer, setTimer] = useState<ITimerConfig>(defaultTimer);\n\n  useEffect(() => {\n    setTimer(defaultTimer);\n  }, [defaultTimer]);\n\n  const value = {\n    timeOption,\n    setTimeOption,\n    timer,\n    setTimer,\n    userInput,\n    setUserInput,\n    wpm,\n    setWpm,\n    inputHistory,\n    setInputHistory,\n    defaultTimer,\n  };\n\n  return (\n    <InputContext.Provider value={value}>{children}</InputContext.Provider>\n  );\n};\n\nexport default InputProvider;\n","import React, { FC, useCallback, useContext } from 'react';\nimport { Box } from '@mui/system';\nimport { ThemeContext, IndexContext, WordListContext } from 'providers';\nimport { TWordChar } from 'providers/WordListProvider';\n\ninterface IProps {\n  charIdx: number;\n  char: TWordChar;\n  wordIdx: number;\n}\n\nconst Char: FC<IProps> = (props) => {\n  const { charIdx, char, wordIdx } = props;\n  const { charList } = useContext(WordListContext);\n  const { userWordIndex, currentCharIndex, setCaretSpacing } =\n    useContext(IndexContext);\n  const { theme } = useContext(ThemeContext);\n\n  const displayExtraChar =\n    wordIdx === userWordIndex &&\n    charIdx >= charList[userWordIndex].length - 1 &&\n    charIdx === currentCharIndex - 1 &&\n    currentCharIndex >= charList[userWordIndex].length - 1;\n\n  const currentChar = wordIdx === userWordIndex && charIdx === currentCharIndex;\n\n  const charRef = useCallback(\n    (node: HTMLDivElement) => {\n      if (node) {\n        setCaretSpacing({\n          top: node.offsetTop,\n          left: node.offsetLeft + (displayExtraChar ? node.offsetWidth + 2 : 0),\n        });\n      }\n    },\n    [setCaretSpacing, displayExtraChar]\n  );\n\n  return (\n    <Box\n      color={\n        (char.correct !== null && !char.correct) || char.extra\n          ? theme.incorrect || 'red'\n          : char.correct\n          ? theme.correct\n          : 'inherit'\n      }\n      ref={currentChar || displayExtraChar ? charRef : null}\n    >\n      {char.char}\n    </Box>\n  );\n};\n\nexport default Char;\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react';\nimport { Box } from '@mui/system';\nimport {\n  IndexContext,\n  SettingsContext,\n  ThemeContext,\n  WordContext,\n  WordListContext,\n} from 'providers';\nimport Char from './Char';\nimport { IChars } from 'providers/WordListProvider';\n\ninterface IProps {\n  wordIdx: number;\n  word: IChars;\n}\n\nconst Word: FC<IProps> = (props) => {\n  const { wordIdx, word } = props;\n  const { theme } = useContext(ThemeContext);\n  const { userWordIndex } = useContext(IndexContext);\n  const { currentWordRef } = useContext(WordContext);\n  const { settings } = useContext(SettingsContext);\n  const { wordList, wordCount } = useContext(WordListContext);\n  const [showWord, setShowWord] = useState(true);\n\n  const wordRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (wordCount !== 'endless' && settings.type !== 'timed') return;\n\n    const wordBox = document.getElementById('wordBox');\n\n    const observer = new IntersectionObserver(\n      ([entry], obs) => {\n        // hide words that the user has already typed\n        if (!entry.isIntersecting && wordIdx < userWordIndex) {\n          setShowWord(false);\n          if (wordRef.current) obs.unobserve(wordRef.current);\n        }\n      },\n      { root: wordBox, rootMargin: '25px' }\n    );\n\n    if (wordRef.current) observer.observe(wordRef.current);\n\n    return () => observer.disconnect();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userWordIndex]);\n\n  // useEffect to reset showWord state when resetting\n  useEffect(() => {\n    setShowWord(true);\n  }, [wordList]);\n\n  if (!showWord) return null;\n\n  return (\n    <Box\n      color={wordIdx === userWordIndex ? theme.currentWord : theme.words}\n      key={wordIdx}\n      sx={{\n        display: 'flex',\n        margin: '0.25em',\n        textDecoration: word.skipped\n          ? `underline ${theme.incorrect || 'red'}`\n          : 'none',\n        flexWrap: 'wrap',\n      }}\n      className=\"word\"\n      ref={userWordIndex === wordIdx ? currentWordRef : wordRef}\n    >\n      {word.chars.map((char, charIdx) => (\n        <Char\n          key={`${char.char}${charIdx}`}\n          wordIdx={wordIdx}\n          char={char}\n          charIdx={charIdx}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default Word;\n","import { keyframes } from '@emotion/react';\nimport { makeStyles } from '@mui/styles';\n\nexport const animation = keyframes`\n  50% {\n    opacity: 0\n  }\n`;\n\nexport const slowAnimation = keyframes`\n50% {\n  opacity: 0.25\n}\n`;\n\nexport const useStyles = makeStyles({\n  show: {\n    visibility: 'visible',\n  },\n});\n","import { FC, useContext } from 'react';\nimport { Box } from '@mui/system';\nimport { ThemeContext } from 'providers';\n\ninterface IProps {\n  message: string | React.ReactNode;\n}\n\nconst MessageOverlay: FC<IProps> = ({ message }) => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Box\n      sx={{\n        position: 'absolute',\n        zIndex: 10,\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        background: 'white',\n        cursor: 'pointer',\n        color: theme.words,\n        backgroundColor: theme.wordBoxBackground,\n      }}\n    >\n      {message}\n    </Box>\n  );\n};\n\nexport default MessageOverlay;\n","import React, { FC, ReactElement } from 'react';\nimport { Tooltip, Typography } from '@mui/material';\nimport { withStyles } from '@mui/styles';\n\nconst StyledTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#1c1c1c',\n    fontSize: '1em',\n    top: -5,\n    borderRadius: 5,\n    padding: '.25em 1em',\n  },\n  arrow: {\n    color: '#1c1c1c',\n  },\n}))(Tooltip);\n\nconst CustomTooltip: FC<{\n  Title: string | (() => ReactElement);\n  children: ReactElement;\n}> = ({ Title, children }) => {\n  return (\n    <StyledTooltip\n      disableInteractive\n      arrow\n      title={\n        typeof Title === 'string' ? (\n          <Typography sx={{ textAlign: 'center' }}>{Title}</Typography>\n        ) : (\n          <Title />\n        )\n      }\n    >\n      {children}\n    </StyledTooltip>\n  );\n};\n\nexport default CustomTooltip;\n","import { useEffect, useContext, FC, KeyboardEvent, useMemo } from 'react';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport Replay from '@mui/icons-material/Replay';\nimport {\n  ThemeContext,\n  WordListContext,\n  WordContext,\n  IndexContext,\n  InputContext,\n  SettingsContext,\n} from 'providers';\nimport { useFocus, useReset } from 'hooks';\nimport { CircularProgress, useMediaQuery, useTheme } from '@mui/material';\nimport { TReactSetState } from 'providers/general/types';\nimport Word from './Word';\nimport { animation, slowAnimation } from './styles';\nimport { TWordChar } from 'providers/WordListProvider';\nimport randomizeWords from 'languages/wordListGenerator';\nimport MessageOverlay from './MessageOverlay';\nimport CustomTooltip from 'components/CustomTooltip';\n\nconst calculateWpm = (charCount: number, timer: number, errors: number) => {\n  const timeToMins = timer / 60;\n  const raw = Math.floor(charCount / 5 / timeToMins);\n  const uncorrectedErrors = Math.floor(errors / timeToMins);\n  const net = Math.max(raw - uncorrectedErrors, 0);\n\n  return {\n    raw,\n    net,\n  };\n};\n\ninterface IProps {\n  setShowTip: TReactSetState<boolean>;\n  setShowWarning: TReactSetState<boolean>;\n}\n\nconst WordBox: FC<IProps> = ({ setShowTip, setShowWarning }) => {\n  const {\n    wordList,\n    wordCount,\n    loading,\n    author,\n    charList,\n    setCharList,\n    errorMessage,\n  } = useContext(WordListContext);\n\n  const {\n    wordBoxConfig,\n    setWordBoxConfig,\n    wpmData,\n    setWpmData,\n    setHeatMapData,\n    textFieldRef,\n    generateCharList,\n  } = useContext(WordContext);\n\n  const { focused, settings } = useContext(SettingsContext);\n\n  const {\n    userInput,\n    setUserInput,\n    timer,\n    setTimer,\n    wpm,\n    setWpm,\n    inputHistory,\n    setInputHistory,\n    timeOption,\n  } = useContext(InputContext);\n\n  const {\n    currentCharIndex,\n    setCurrentCharIndex,\n    currentWordIndex,\n    setCurrentWordIndex,\n    caretSpacing,\n    userWordIndex,\n    setUserWordIndex,\n  } = useContext(IndexContext);\n\n  const muiTheme = useTheme();\n  const { theme } = useContext(ThemeContext);\n  const { charCount, incorrectChars, uncorrectedErrors } = wordBoxConfig;\n\n  const mobileDevice = useMediaQuery(muiTheme.breakpoints.down('sm'));\n  const focus = useFocus();\n\n  const handleFocus = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.stopPropagation();\n    focus();\n  };\n\n  const handleReset = useReset();\n\n  const caretStyling = useMemo(() => {\n    const { top, left } = caretSpacing;\n    return {\n      height: '2rem',\n      width: 3,\n      top: top - 2,\n      left: left - 2,\n      position: 'absolute',\n      backgroundColor: theme.currentChar,\n      animation: !timer.id\n        ? `${animation} 1.1s ease infinite`\n        : `${slowAnimation} 1.5s linear infinite`,\n      zIndex: 5,\n      transition: 'left 75ms ease',\n      display:\n        top > 0 &&\n        left > 0 &&\n        Object.keys(wpmData).length !== wordCount &&\n        focused\n          ? 'initial'\n          : 'none',\n    } as const;\n  }, [theme, caretSpacing, wordCount, wpmData, focused, timer.id]);\n\n  useEffect(() => {\n    if (wordList.length) {\n      setCharList(generateCharList(wordList));\n      focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wordList, generateCharList]);\n\n  useEffect(() => {\n    if (settings.type === 'quotes') return;\n    const newWord = randomizeWords(settings, true);\n    const wordChars: TWordChar[] = [];\n    for (const char of newWord) {\n      wordChars.push({ correct: null, char });\n    }\n    setCharList((prev) => ({\n      ...prev,\n      [Object.keys(prev).length]: {\n        chars: wordChars,\n        length: wordChars.length,\n        word: newWord,\n      },\n    }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentWordIndex]);\n\n  useEffect(() => {\n    const time =\n      timer.countdown && timeOption !== 'endless'\n        ? timeOption - timer.time + 1\n        : timer.time;\n    setWpm(calculateWpm(charCount, time, uncorrectedErrors));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timer.time, charCount, uncorrectedErrors]);\n\n  useEffect(() => {\n    if (!timer.id && userInput) {\n      const intervalTimer = setInterval(\n        () =>\n          setTimer((prev) => ({\n            ...prev,\n            time:\n              prev.time +\n              (timer.countdown && timeOption !== 'endless' ? -1 : 1),\n          })),\n        1000\n      );\n      setTimer((prev) => ({ ...prev, id: intervalTimer }));\n    } else if (\n      timer.id &&\n      ((timer.countdown && timeOption !== 'endless' && timer.time === 0) ||\n        (settings.type !== 'timed' &&\n          wordCount !== 'endless' &&\n          currentWordIndex === wordCount - 1 &&\n          userInput === charList[wordCount - 1].word))\n    ) {\n      clearInterval(timer.id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userInput, currentWordIndex, timer, charList, wordCount]);\n\n  useEffect(() => {\n    if (timer.id) {\n      handleReset();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  // input field logic\n  const handleUserInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInput(e.target.value);\n    if (currentWordIndex < Object.keys(charList).length) {\n      const lastUserChar = e.target.value[e.target.value.length - 1];\n\n      // handle space\n      if (lastUserChar === ' ') {\n        // if user presses space with no input, do nothing\n        if (currentCharIndex === 0) {\n          setUserInput('');\n          return;\n        }\n        // if user presses space before reaching the end of the word, make entire word incorrect and remove other styling\n        if (\n          currentCharIndex !== charList[userWordIndex].chars.length ||\n          e.target.value.length - 1 > charList[userWordIndex].chars.length\n        ) {\n          charList[userWordIndex].skipped = true;\n          // loop over remaining chars and set skipped to true\n          for (\n            let i = currentCharIndex;\n            i < charList[userWordIndex].length;\n            i++\n          ) {\n            charList[userWordIndex].chars[i].skipped = true;\n          }\n        }\n\n        let missingChars = 0;\n        let extraChars = 0;\n\n        charList[userWordIndex].chars.forEach((char) => {\n          if (char.skipped) missingChars++;\n          else if (char.extra) extraChars++;\n        });\n\n        const totalWordErrors = missingChars + incorrectChars;\n\n        // set wpm data timestep\n        setWpmData((prev) => ({\n          ...prev,\n          [userWordIndex]: {\n            word: charList[userWordIndex].chars,\n            wordNum: userWordIndex + 1,\n            errors: totalWordErrors,\n            wpm,\n            missingChars,\n            extraChars,\n            incorrectChars,\n          },\n        }));\n\n        // else move to next word\n        setWordBoxConfig((prev) => ({\n          ...prev,\n          // add +1 for space\n          charCount: prev.charCount + 1,\n          incorrectChars: 0,\n          uncorrectedErrors: prev.uncorrectedErrors + missingChars,\n        }));\n        setCurrentCharIndex(0);\n        if (userWordIndex === currentWordIndex) {\n          setCurrentWordIndex((prev) => prev + 1);\n        }\n        setUserWordIndex((prev) => prev + 1);\n        setUserInput('');\n        setInputHistory((prev) => [...prev, e.target.value]);\n      } else {\n        // move to next or previous character\n        setCurrentCharIndex(e.target.value.length);\n\n        // userInput is > target value only when deleting since userInput is one state behind\n        if (userInput.length > e.target.value.length) return;\n\n        setWordBoxConfig((prev) => ({\n          ...prev,\n          charCount: prev.charCount + 1,\n        }));\n\n        if (e.target.value.length <= charList[userWordIndex].length) {\n          const currentChar =\n            charList[userWordIndex].chars[e.target.value.length - 1];\n          const isCorrect =\n            e.target.value.length <= charList[userWordIndex].length &&\n            lastUserChar === currentChar.char;\n\n          currentChar.correct = isCorrect;\n\n          if (!isCorrect) {\n            setWordBoxConfig((prev) => ({\n              ...prev,\n              incorrectChars: prev.incorrectChars + 1,\n              uncorrectedErrors: prev.uncorrectedErrors + 1,\n            }));\n            currentChar.mistyped = true;\n            setHeatMapData((prev) => ({\n              ...prev,\n              [currentChar.char]: {\n                correct: prev[currentChar.char]\n                  ? prev[currentChar.char].correct\n                  : 0,\n                incorrect: prev[currentChar.char]\n                  ? prev[currentChar.char].incorrect + 1\n                  : 1,\n              },\n            }));\n          } else {\n            setHeatMapData((prev) => ({\n              ...prev,\n              [currentChar.char]: {\n                correct: prev[currentChar.char]\n                  ? prev[currentChar.char].correct + 1\n                  : 1,\n                incorrect: prev[currentChar.char]\n                  ? prev[currentChar.char].incorrect\n                  : 0,\n              },\n            }));\n          }\n        }\n\n        // append extra letters to words if user types more letters\n        else if (e.target.value.length > charList[userWordIndex].length) {\n          charList[userWordIndex].chars.push({\n            char: lastUserChar,\n            correct: false,\n            extra: true,\n            skipped: false,\n          });\n          setWordBoxConfig((prev) => ({\n            ...prev,\n            uncorrectedErrors: prev.uncorrectedErrors + 1,\n            incorrectChars: prev.incorrectChars + 1,\n          }));\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const capsLockListener = (e: globalThis.KeyboardEvent) => {\n      setShowWarning(!mobileDevice && e.getModifierState('CapsLock'));\n      setShowTip(false);\n    };\n    window.addEventListener('keydown', capsLockListener);\n    window.addEventListener('keyup', capsLockListener);\n    return () => {\n      window.removeEventListener('keydown', capsLockListener);\n      window.removeEventListener('keyup', capsLockListener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Backspace') {\n      const decrementErrors = () => {\n        setWordBoxConfig((prev) => ({\n          ...prev,\n          uncorrectedErrors: prev.uncorrectedErrors - 1,\n        }));\n      };\n\n      const decrementWord = () => {\n        setUserWordIndex((prev) => prev - 1);\n        charList[userWordIndex - 1].skipped = false;\n        setInputHistory((prev) => prev.slice(0, prev.length - 1));\n      };\n\n      const resetWord = (index: number) => {\n        let newUncorrectErrors = uncorrectedErrors;\n        charList[index].chars.forEach((char) => {\n          if ((char.correct !== null && !char.correct) || char.extra) {\n            newUncorrectErrors--;\n          }\n        });\n        const baseWord = charList[index].chars.filter((char) => !char.extra);\n\n        const resetWord: TWordChar[] = baseWord.map((char) => ({\n          correct: null,\n          char: char.char,\n          skipped: false,\n        }));\n\n        setWordBoxConfig((prev) => ({\n          ...prev,\n          uncorrectedErrors: newUncorrectErrors,\n          incorrectChars: 0,\n        }));\n\n        charList[index].chars = resetWord;\n      };\n\n      const previousWord = inputHistory[userWordIndex - 1];\n\n      // deleting entire word\n      if (e.getModifierState('Alt') || e.getModifierState('Meta')) {\n        // if at the beginning of a word, delete entire previous word\n        if (currentCharIndex === 0 && userWordIndex > 0) {\n          resetWord(userWordIndex - 1);\n          decrementWord();\n          // else delete just current word\n        } else {\n          resetWord(userWordIndex);\n        }\n        // move back one word if backspacing at the beginning of a word\n      } else if (currentCharIndex === 0 && userWordIndex > 0) {\n        setWordBoxConfig((prev) => ({\n          ...prev,\n          uncorrectedErrors:\n            prev.uncorrectedErrors -\n            // subtract 1 to account for the space\n            (charList[userWordIndex - 1].chars.length -\n              (previousWord.length - 1)),\n          incorrectChars: wpmData[userWordIndex - 1].incorrectChars,\n        }));\n\n        decrementWord();\n\n        setUserInput(inputHistory[userWordIndex - 1]);\n        // if deleting an extra character, remove it from the charList\n      } else {\n        if (currentCharIndex > charList[userWordIndex].length) {\n          charList[userWordIndex].chars = charList[userWordIndex].chars.slice(\n            0,\n            charList[userWordIndex].chars.length - 1\n          );\n          // otherwise just decrement the num errors and update correct state\n        } else if (currentCharIndex > 0) {\n          charList[userWordIndex].chars[currentCharIndex - 1].correct = null;\n          if (\n            !charList[userWordIndex].chars[currentCharIndex - 1].correct ||\n            charList[userWordIndex].chars[currentCharIndex - 1].extra\n          ) {\n            decrementErrors();\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <Container\n      sx={{\n        borderRadius: 5,\n        fontSize: '1.5em',\n        backgroundColor: theme.wordBoxBackground,\n        border: theme.border,\n      }}\n      onClick={handleFocus}\n    >\n      <Container\n        sx={{\n          visibility: timer.id ? 'visible' : 'hidden',\n          height: '2em',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: 0,\n          fontSize: 'clamp(1rem, 5vw + .25rem, 1.5rem)',\n        }}\n        disableGutters\n      >\n        <Box sx={{ color: theme.words }}>{`${userWordIndex}${\n          wordCount !== 'endless' &&\n          timer._time !== 'endless' &&\n          settings.type !== 'timed'\n            ? ` / ${wordCount}`\n            : ''\n        }`}</Box>\n\n        <Box sx={{ color: theme.words }}>{`${timer.time}s`}</Box>\n      </Container>\n\n      <div style={{ position: 'relative', display: 'flex' }}>\n        <Box\n          sx={{\n            position: 'relative',\n            zIndex: 1,\n            height: 100,\n            overflow: 'hidden',\n            fontSize: 'clamp(1rem, 5vw + .25rem, 1.5rem)',\n            width: '100%',\n            display: 'flex',\n            flexWrap: 'wrap',\n          }}\n          id=\"wordBox\"\n        >\n          {Object.values(charList).map((word, wordIdx) => (\n            <Word key={wordIdx} wordIdx={wordIdx} word={word} />\n          ))}\n          <Box sx={caretStyling}></Box>\n          {author && (\n            <Box\n              sx={{\n                color: theme.words,\n                filter: 'brightness(70%)',\n                margin: '0.25em',\n                fontStyle: 'italic',\n              }}\n            >\n              &#8212;{author}\n            </Box>\n          )}\n        </Box>\n        {errorMessage && <MessageOverlay message={errorMessage} />}\n        {!focused && <MessageOverlay message=\"click here to start typing\" />}\n        {loading && (\n          <MessageOverlay\n            message={<CircularProgress sx={{ color: theme.headings }} />}\n          />\n        )}\n      </div>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: '.3em 0',\n        }}\n      >\n        <div style={{ width: 0, opacity: 0, boxSizing: 'border-box' }}>\n          <input\n            value={userInput}\n            onChange={handleUserInput}\n            ref={textFieldRef}\n            autoFocus\n            onKeyDown={handleKeyDown}\n            style={{ fontSize: '1em', width: '1em' }}\n            autoCapitalize=\"off\"\n            autoCorrect=\"off\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <CustomTooltip Title=\"restart test\">\n          <Button\n            sx={{ color: theme.currentWord, height: '100%', width: '20%' }}\n            onClick={(e) => {\n              handleReset(e);\n              if (!mobileDevice) {\n                setShowTip(true);\n                setShowWarning(false);\n              }\n            }}\n          >\n            <Replay />\n          </Button>\n        </CustomTooltip>\n      </Box>\n    </Container>\n  );\n};\n\nexport default WordBox;\n","import { SettingsContext, ThemeContext } from 'providers';\nimport { ISettings } from 'providers/SettingsProvider';\nimport { useCallback, useContext, useMemo } from 'react';\n\nconst useWordOptionTheme = (type: ISettings['type']) => {\n  const { theme, textColor } = useContext(ThemeContext);\n  const { settings } = useContext(SettingsContext);\n\n  const optionContainerStyle = useMemo(\n    () =>\n      ({\n        display: settings.type === type ? 'flex' : 'none',\n        opacity: settings.type === type ? 1 : 0,\n        visibility: settings.type === type ? 'visible' : 'hidden',\n        transition: 'opacity 300ms linear 1ms, visibility 0s 1ms',\n      } as const),\n    [settings.type, type]\n  );\n\n  const getOptionStyle = useCallback(\n    (condition: boolean) =>\n      ({\n        padding: '0em .5em',\n        cursor: 'pointer',\n        color: condition ? theme.wordsContrast || theme.currentWord : textColor,\n        opacity: condition ? 1 : 0.6,\n        transition: 'opacity 300ms ease-in-out',\n        '&:hover': {\n          opacity: 1,\n        },\n        fontWeight: condition ? 'bold' : 'normal',\n      } as const),\n    [theme, textColor]\n  );\n\n  const getOptionTypographyStyle = useCallback(\n    (condition: boolean) =>\n      ({\n        display: 'flex',\n        alignItems: 'center',\n        lineHeight: 'normal',\n        height: 20,\n        boxSizing: 'border-box',\n        fontWeight: condition ? 'bold' : 'normal',\n        borderColor: 'inherit',\n      } as const),\n    []\n  );\n\n  return useMemo(\n    () => ({\n      getOptionStyle,\n      optionContainerStyle,\n      getOptionTypographyStyle,\n    }),\n    [optionContainerStyle, getOptionStyle, getOptionTypographyStyle]\n  );\n};\n\nexport default useWordOptionTheme;\n","import React, { FC, useContext } from 'react';\nimport { wordOptions } from 'providers/WordProvider';\nimport useWordOptionTheme from './styles';\nimport { SettingsContext } from 'providers';\nimport { useFocus } from 'hooks';\nimport { Box } from '@mui/system';\nimport { ISettings } from 'providers/SettingsProvider';\n\ninterface IProps {\n  type: ISettings['type'];\n}\n\nconst WordTypeOptions: FC<IProps> = ({ type }) => {\n  const { getOptionStyle, optionContainerStyle } = useWordOptionTheme(type);\n  const { settings, setSettings } = useContext(SettingsContext);\n\n  const focus = useFocus();\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {wordOptions.map((setting, idx) => (\n        <div style={optionContainerStyle} key={setting.value + idx}>\n          <Box\n            sx={{\n              display: 'flex',\n              ...getOptionStyle(settings[setting.value]),\n            }}\n            onClick={(e) => {\n              e.stopPropagation();\n              setSettings((prev) => ({\n                ...prev,\n                [setting.value]: !prev[setting.value],\n              }));\n              focus();\n            }}\n          >\n            {setting.name}\n          </Box>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WordTypeOptions;\n","import { FC, useContext } from 'react';\nimport { useFocus } from 'hooks';\nimport { ThemeContext, WordListContext } from 'providers';\nimport { Typography, Box } from '@mui/material';\nimport useWordOptionTheme from './styles';\nimport WordTypeOptions from './WordTypeOptions';\nimport { IOptionProps } from './types';\n\nconst options = [10, 25, 50, 'endless'] as const;\n\nconst WordCountOptions: FC<IOptionProps> = ({ setNeedReset }) => {\n  const { textColor } = useContext(ThemeContext);\n\n  const { setWordCount, wordCount, setLSWordCount } =\n    useContext(WordListContext);\n\n  const { getOptionTypographyStyle, optionContainerStyle, getOptionStyle } =\n    useWordOptionTheme('words');\n\n  const focus = useFocus();\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <WordTypeOptions type=\"words\" />\n      <div style={{ display: 'flex' }}>\n        {options.map((option, idx) => (\n          <div style={optionContainerStyle} key={'wordsbox' + idx}>\n            <Box\n              sx={getOptionStyle(option === wordCount)}\n              onClick={(e) => {\n                e.stopPropagation();\n                setWordCount(option);\n                setLSWordCount(option);\n                setNeedReset(true);\n              }}\n            >\n              <Typography\n                sx={{\n                  fontSize: option === 'endless' ? '1.5rem' : '1rem',\n                  ...getOptionTypographyStyle(option === wordCount),\n                }}\n              >\n                {option !== 'endless' ? option : String.fromCharCode(8734)}\n              </Typography>\n            </Box>\n            <Box\n              sx={{ color: textColor, cursor: 'default' }}\n              key={'spacer' + option}\n              onClick={(e) => {\n                e.stopPropagation();\n                focus();\n              }}\n            >\n              {idx !== options.length - 1 && '/'}\n            </Box>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default WordCountOptions;\n","import { FC, useContext } from 'react';\nimport { ThemeContext, WordListContext } from 'providers';\nimport useWordOptionTheme from './styles';\nimport { useFocus } from 'hooks';\nimport { Typography, Box } from '@mui/material';\nimport { IOptionProps } from './types';\n\nconst options = ['short', 'medium', 'long', 'all'] as const;\n\nconst QuoteOptions: FC<IOptionProps> = ({ setNeedReset }) => {\n  const { setQuoteParams, quoteParams } = useContext(WordListContext);\n  const { optionContainerStyle, getOptionStyle, getOptionTypographyStyle } =\n    useWordOptionTheme('quotes');\n  const { textColor } = useContext(ThemeContext);\n  const focus = useFocus();\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {options.map((option, idx) => (\n        <div style={optionContainerStyle} key={'quotesbox' + idx}>\n          <Box\n            sx={getOptionStyle(option === quoteParams)}\n            onClick={(e) => {\n              e.stopPropagation();\n              setQuoteParams(option);\n              setNeedReset(true);\n            }}\n          >\n            <Typography sx={getOptionTypographyStyle(option === quoteParams)}>\n              {option}\n            </Typography>\n          </Box>\n          <Box\n            sx={{ color: textColor, cursor: 'default' }}\n            key={'spacer' + option}\n            onClick={(e) => {\n              e.stopPropagation();\n              focus();\n            }}\n          >\n            {idx !== options.length - 1 && '/'}\n          </Box>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default QuoteOptions;\n","import React, { FC } from 'react';\nimport { IProps } from './types';\nimport { Box } from '@mui/system';\n\nconst WordOption: FC<IProps> = ({ showOptions, setShowOptions, children }) => {\n  return (\n    <Box\n      sx={{\n        visibility: showOptions ? 'visible' : 'hidden',\n        opacity: showOptions ? 1 : 0,\n        transition: 'opacity 300ms ease-in-out',\n        width: '100%',\n        height: 40,\n        top: 0,\n        display: 'flex',\n        alignItems: 'flex-end',\n      }}\n      onMouseEnter={() => {\n        setShowOptions(true);\n      }}\n      onMouseLeave={() => {\n        setShowOptions(false);\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default WordOption;\n","import React, { FC, useContext } from 'react';\nimport { InputContext, ThemeContext, WordListContext } from 'providers';\nimport { useFocus } from 'hooks';\nimport useWordOptionTheme from './styles';\nimport { Box } from '@mui/system';\nimport { Typography } from '@mui/material';\nimport WordTypeOptions from './WordTypeOptions';\nimport { IOptionProps } from './types';\n\nconst options = [15, 30, 60, 120, 'endless'] as const;\n\nconst TimedOptions: FC<IOptionProps> = ({ setNeedReset }) => {\n  const { timeOption, setTimeOption } = useContext(InputContext);\n  const { textColor } = useContext(ThemeContext);\n  const { setWordCount } = useContext(WordListContext);\n\n  const { optionContainerStyle, getOptionStyle, getOptionTypographyStyle } =\n    useWordOptionTheme('timed');\n\n  const focus = useFocus();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <WordTypeOptions type=\"timed\" />\n      <div style={{ display: 'flex' }}>\n        {options.map((option, idx) => (\n          <div style={optionContainerStyle} key={'quotesbox' + idx}>\n            <Box\n              sx={getOptionStyle(option === timeOption)}\n              onClick={(e) => {\n                e.stopPropagation();\n                if (option === 'endless') {\n                  setWordCount(option);\n                }\n                setTimeOption(option);\n                setNeedReset(true);\n              }}\n            >\n              <Typography\n                sx={{\n                  ...getOptionTypographyStyle(option === timeOption),\n                  fontSize: option === 'endless' ? '1.5rem' : '1rem',\n                }}\n              >\n                {option !== 'endless' ? option : String.fromCharCode(8734)}\n              </Typography>\n            </Box>\n            <Box\n              sx={{ color: textColor, cursor: 'default' }}\n              key={'quotesbox' + option}\n              onClick={(e) => {\n                e.stopPropagation();\n                focus();\n              }}\n            >\n              {idx !== options.length - 1 && '/'}\n            </Box>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TimedOptions;\n","import React, { useContext } from 'react';\nimport { Typography } from '@mui/material';\nimport { InputContext, ThemeContext } from 'providers';\n\nconst Wpm = () => {\n  const { textColor } = useContext(ThemeContext);\n  const { wpm } = useContext(InputContext);\n\n  return (\n    <div style={{ display: 'flex', alignSelf: 'flex-end' }}>\n      <Typography\n        sx={{ color: textColor, marginRight: '.25em', fontWeight: 'bold' }}\n      >\n        {'wpm: '}\n      </Typography>\n      <Typography sx={{ color: textColor, fontWeight: 'bold' }}>\n        {wpm.net || ''}\n      </Typography>\n    </div>\n  );\n};\n\nexport default Wpm;\n","import { useMemo, useContext, useState, useEffect, useCallback } from 'react';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { SettingsContext, ThemeContext, WordListContext } from 'providers';\nimport WordCountOptions from './WordCountOptions';\nimport { Typography } from '@mui/material';\nimport { useReset } from 'hooks';\nimport QuoteOptions from './QuoteOptions';\nimport WordOption from './WordOption';\nimport TimedOptions from './TimedOptions';\nimport Wpm from './Wpm';\n\nconst categories = ['words', 'timed', 'quotes'] as const;\n\nconst WordOptions = () => {\n  const { settings, setSettings } = useContext(SettingsContext);\n  const { LSWordCount, setWordCount } = useContext(WordListContext);\n\n  const { theme } = useContext(ThemeContext);\n\n  const textColor = useMemo(() => theme.wordsContrast || theme.words, [theme]);\n\n  const [showOptions, setShowOptions] = useState(false);\n  const [needReset, setNeedReset] = useState(false);\n\n  const handleClick = useCallback(\n    (\n      e: React.MouseEvent<HTMLSpanElement, MouseEvent>,\n      option: typeof categories[number]\n    ) => {\n      e.stopPropagation();\n      setSettings((prev) => ({ ...prev, type: option }));\n      if (option === 'words') setWordCount(LSWordCount);\n      setShowOptions(true);\n      setNeedReset(true);\n    },\n    [setSettings, setShowOptions, setNeedReset, LSWordCount, setWordCount]\n  );\n\n  const reset = useReset();\n\n  useEffect(() => {\n    if (needReset) {\n      reset();\n      setNeedReset(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [needReset]);\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '.5em',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          position: 'relative',\n        }}\n      >\n        <WordOption showOptions={showOptions} setShowOptions={setShowOptions}>\n          <QuoteOptions setNeedReset={setNeedReset} />\n          <WordCountOptions setNeedReset={setNeedReset} />\n          <TimedOptions setNeedReset={setNeedReset} />\n        </WordOption>\n        <Box sx={{ display: 'flex' }}>\n          {categories.map((option) => (\n            <Typography\n              onClick={(e) => {\n                handleClick(e, option);\n              }}\n              sx={{\n                margin: '0 .5em',\n                color:\n                  option === settings.type\n                    ? theme.wordsContrast || theme.currentWord\n                    : textColor,\n                opacity: option === settings.type ? 1 : 0.6,\n                cursor: 'pointer',\n                fontWeight: option === settings.type ? 'bold' : 'normal',\n              }}\n              key={option}\n              onMouseEnter={() => {\n                if (option === settings.type) setShowOptions(true);\n              }}\n              onMouseLeave={() => {\n                setShowOptions(false);\n              }}\n            >\n              {option}\n            </Typography>\n          ))}\n        </Box>\n      </Box>\n      <Wpm />\n    </Container>\n  );\n};\n\nexport default WordOptions;\n","import React, { FC, useContext } from 'react';\nimport { Container, Box } from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport CustomTooltip from 'components/CustomTooltip';\n\ninterface IProps {\n  title: string;\n  data: number | string;\n  unit?: string;\n  tooltip?: string;\n}\n\nconst DataDisplay: FC<IProps> = ({ title, data, unit, tooltip }) => {\n  const { theme } = useContext(ThemeContext);\n\n  const renderContent = () => {\n    const children = (\n      <Box fontSize=\"1.5em\" sx={{ textAlign: 'center' }}>\n        {data}\n        {unit || ''}\n      </Box>\n    );\n    if (tooltip) {\n      return <CustomTooltip Title={tooltip}>{children}</CustomTooltip>;\n    } else {\n      return children;\n    }\n  };\n\n  return (\n    <Container\n      sx={{\n        color: theme.headings,\n        marginBottom: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '0 !important',\n        width: 'max-content',\n      }}\n    >\n      <Box fontSize=\"1.1em\">{title}</Box>\n      {renderContent()}\n    </Container>\n  );\n};\n\nexport default DataDisplay;\n","const CustomX = (props: any) => {\n  if (!props.payload.errors) return null;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"40\"\n      height=\"40\"\n      fill=\"red\"\n      viewBox=\"0 0 20 20\"\n      x={props.x - 11}\n      y={props.y - 11}\n    >\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n    </svg>\n  );\n};\n\nexport default CustomX;\n","import { Box } from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport { FC, useContext } from 'react';\n\nconst CustomPayload: FC<{\n  color: string;\n  label: string;\n  payload: any;\n  line?: boolean;\n  strike?: boolean;\n  x?: boolean;\n  underline?: boolean;\n}> = ({ label, payload, color, line, strike, x, underline }) => {\n  const legend = {\n    height: line ? 2 : 10,\n    width: 10,\n    display: 'flex',\n    justifyContent: 'center',\n  };\n  const { theme } = useContext(ThemeContext);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        color: theme.words,\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        {x ? (\n          <Box sx={{ color, fontWeight: 'bold' }}>X</Box>\n        ) : (\n          <Box\n            style={{\n              backgroundColor: color,\n              zIndex: 1,\n              ...legend,\n            }}\n          >\n            {(strike || underline) && (\n              <Box\n                sx={{\n                  color,\n                  textDecoration: `${\n                    strike ? 'line-through' : 'underline'\n                  } 2px red`,\n                  position: 'relative',\n                  fontSize: '1ch',\n                  '&::before': {\n                    content: '\"-\"',\n                  },\n                  '&::after': {\n                    content: '\"-\"',\n                  },\n                }}\n              >\n                0\n              </Box>\n            )}\n          </Box>\n        )}\n      </div>\n      <p\n        style={{\n          margin: '0',\n          padding: '3px 7.5px',\n        }}\n      >\n        {`${label}: ${payload}`}\n      </p>\n    </div>\n  );\n};\n\nexport default CustomPayload;\n","import { Box } from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport { TWordChar } from 'providers/WordListProvider';\nimport { useContext } from 'react';\nimport CustomPayload from './CustomPayload';\n\nconst CustomTooltip = (props: any) => {\n  const { payload, active } = props;\n  const { theme } = useContext(ThemeContext);\n\n  if (!active || !payload || !payload.length) return null;\n  const payloadWrapperStyle = {\n    background: theme.wordBoxBackground,\n    borderRadius: 3,\n    padding: '.5em',\n    border: theme.border || `1px solid ${theme.graphText || theme.words}`,\n  };\n  return (\n    <div>\n      <div style={payloadWrapperStyle}>\n        <Box\n          sx={{\n            margin: '0 0',\n            padding: '3px 7.5px',\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '1.2em',\n            fontWeight: 'bold',\n          }}\n        >\n          {payload[0].payload.word.map((char: TWordChar, idx: number) => (\n            <Box\n              key={char.char + idx}\n              sx={{\n                color: char.mistyped\n                  ? theme.incorrect ?? 'red'\n                  : char.extra\n                  ? theme.currentWord\n                  : char.skipped\n                  ? theme.words\n                  : theme.correct,\n                textDecoration: char.skipped\n                  ? 'underline red 2px'\n                  : char.extra\n                  ? 'line-through red 1px'\n                  : 'none',\n              }}\n            >\n              {char.char}\n            </Box>\n          ))}\n        </Box>\n        {payload[0].payload.incorrectChars > 0 && (\n          <CustomPayload\n            label=\"incorrect\"\n            payload={payload[0].payload.incorrectChars}\n            color={payload[2].fill}\n          />\n        )}\n        {payload[0].payload.extraChars > 0 && (\n          <CustomPayload\n            label=\"extra\"\n            payload={payload[0].payload.extraChars}\n            color={theme.currentWord}\n            strike\n          />\n        )}\n        {payload[0].payload.missingChars > 0 && (\n          <CustomPayload\n            label=\"missing\"\n            payload={payload[0].payload.missingChars}\n            color={theme.words}\n            underline\n          />\n        )}\n      </div>\n      <div\n        style={{\n          ...payloadWrapperStyle,\n          height: 'fit-content',\n          marginTop: '.5em',\n        }}\n      >\n        <CustomPayload\n          label=\"raw\"\n          payload={payload[0].payload.wpm.raw}\n          color={payload[0].stroke}\n          line\n        />\n        <CustomPayload\n          label=\"wpm\"\n          payload={payload[0].payload.wpm.net}\n          color={payload[1].stroke}\n          line\n        />\n        {payload[0].payload.errors > 0 && (\n          <CustomPayload\n            label=\"errors\"\n            payload={payload[0].payload.errors}\n            color={payload[2].fill}\n            x\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomTooltip;\n","import { Box } from '@mui/material';\nimport CustomTooltip from 'components/CustomTooltip';\nimport { ThemeContext, WordContext } from 'providers';\nimport React, { FC, useContext } from 'react';\nimport { IKey } from './KeyRow';\n\nconst Key: FC<{ keyProp: IKey }> = ({ keyProp }) => {\n  const { primary, secondary, modifier, size = 1 } = keyProp;\n\n  const letterProps = { marginLeft: '.2rem', fontSize: '.8em' } as const;\n\n  const { theme } = useContext(ThemeContext);\n  const { heatMapData } = useContext(WordContext);\n\n  const displayTooltip =\n    heatMapData[primary] ||\n    heatMapData[primary.toLowerCase()] ||\n    (secondary && heatMapData[secondary]);\n\n  const renderTooltip = () => {\n    const children = (\n      <Box\n        sx={{\n          border: `1px solid ${theme.headings}`,\n          color: theme.words,\n          margin: '.15rem',\n          borderRadius: 1,\n          boxSizing: 'border-box',\n          paddingBottom: '.2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: modifier ? 'center' : 'normal',\n          fontSize: secondary || modifier ? '1.2em' : '1.5em',\n          width: 45 * size,\n          height: 45,\n          backgroundColor:\n            heatMapData[primary]?.incorrect > 2 ||\n            heatMapData[primary.toLowerCase()]?.incorrect > 2 ||\n            (secondary && heatMapData[secondary]?.incorrect > 2)\n              ? 'rgba(255, 0, 0, .6)'\n              : heatMapData[primary]?.incorrect > 0 ||\n                heatMapData[primary.toLowerCase()]?.incorrect > 0 ||\n                (secondary && heatMapData[secondary]?.incorrect > 0)\n              ? 'rgba(255, 165, 0, .6)'\n              : heatMapData[primary] ||\n                heatMapData[primary.toLowerCase()] ||\n                (secondary && heatMapData[secondary])\n              ? 'rgba(0, 155, 0, .3)'\n              : 'inherit',\n        }}\n      >\n        {secondary && <Box sx={letterProps}>{secondary}</Box>}\n        <Box sx={letterProps}>{primary}</Box>\n      </Box>\n    );\n    if (!displayTooltip) return children;\n    return (\n      <CustomTooltip\n        Title={() => (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                '& > div': {\n                  padding: '.5em',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                },\n              }}\n            >\n              <Box>\n                <Box sx={{ marginBottom: '.5em' }}>key:</Box>\n                {primary.match(/^[A-Z]+$/) &&\n                  heatMapData[primary.toLowerCase()] && (\n                    <Box>{primary.toLowerCase()}</Box>\n                  )}\n                {heatMapData[primary] && <Box>{primary}</Box>}\n                {secondary && heatMapData[secondary] && <Box>{secondary}</Box>}\n              </Box>\n              <Box>\n                <Box sx={{ marginBottom: '.5em' }}>correct:</Box>\n                {primary.match(/^[A-Z]+$/) &&\n                  heatMapData[primary.toLowerCase()] && (\n                    <Box>{heatMapData[primary.toLowerCase()].correct}</Box>\n                  )}\n                {heatMapData[primary] && (\n                  <Box>{heatMapData[primary].correct}</Box>\n                )}\n                {secondary && heatMapData[secondary] && (\n                  <Box>{heatMapData[secondary].correct}</Box>\n                )}\n              </Box>\n              <Box>\n                <Box sx={{ marginBottom: '.5em' }}>incorrect:</Box>\n                {primary.match(/^[A-Z]+$/) &&\n                  heatMapData[primary.toLowerCase()] && (\n                    <Box>{heatMapData[primary.toLowerCase()].incorrect}</Box>\n                  )}\n                {heatMapData[primary] && (\n                  <Box>{heatMapData[primary].incorrect}</Box>\n                )}\n                {secondary && heatMapData[secondary] && (\n                  <Box>{heatMapData[secondary].incorrect}</Box>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        )}\n      >\n        {children}\n      </CustomTooltip>\n    );\n  };\n\n  return renderTooltip();\n};\n\nexport default Key;\n","import { Box } from '@mui/material';\nimport React, { FC } from 'react';\nimport Key from './Key';\n\nexport interface IKey {\n  primary: string;\n  secondary?: string;\n  modifier?: boolean;\n  size?: number;\n}\n\nconst KeyRow: FC<{ keys: IKey[] }> = ({ keys }) => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      {keys.map((key, idx) => (\n        <Key key={key + 'key' + idx} keyProp={key} />\n      ))}\n    </Box>\n  );\n};\n\nexport default KeyRow;\n","import { Box, Container } from '@mui/material';\nimport CustomTooltip from 'components/CustomTooltip';\nimport { ThemeContext } from 'providers';\nimport { useContext } from 'react';\nimport KeyRow from './KeyRow';\nimport rows from './rows.json';\n\nconst HeatMap = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Container\n      sx={{\n        width: { xs: '100%', md: 'auto' },\n        margin: '0 auto',\n        backgroundColor: theme.wordBoxBackground,\n        padding: '2em',\n        borderRadius: 3,\n        marginTop: '2em',\n      }}\n    >\n      <CustomTooltip Title=\"all mistakes are shown whether corrected or uncorrected\">\n        <Box\n          sx={{\n            fontSize: '1.5em',\n            margin: '0 auto',\n            marginBottom: '1em',\n            color: theme.words,\n            width: 'fit-content',\n          }}\n        >\n          Key Heatmap\n        </Box>\n      </CustomTooltip>\n      {Object.values(rows).map((row, idx) => (\n        <KeyRow key={'row' + idx} keys={row} />\n      ))}\n    </Container>\n  );\n};\n\nexport default HeatMap;\n","import { useContext, useEffect, useMemo } from 'react';\nimport {\n  Container,\n  Button,\n  Box,\n  useMediaQuery,\n  Typography,\n} from '@mui/material';\nimport { InputContext, SettingsContext, WordContext } from 'providers';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport ScreenLockLandscapeIcon from '@mui/icons-material/ScreenLockLandscape';\nimport KeyboardIcon from '@mui/icons-material/Keyboard';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport {\n  Line,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ComposedChart,\n  Scatter,\n  Label,\n  Legend,\n} from 'recharts';\nimport { ThemeContext } from 'providers';\nimport { useReset } from 'hooks';\nimport DataDisplay from './DataDisplay';\nimport { default as MuiCustomTooltip } from 'components/CustomTooltip';\nimport CustomX from './CustomX';\nimport CustomTooltip from './CustomTooltip';\nimport HeatMap from 'components/HeatMap';\nimport { useTheme } from '@mui/system';\n\nconst Stats = () => {\n  const { wpmData, wordBoxConfig } = useContext(WordContext);\n  const { settings } = useContext(SettingsContext);\n  const { timer, wpm } = useContext(InputContext);\n\n  const { theme } = useContext(ThemeContext);\n  const muiTheme = useTheme();\n  const smallScreen = useMediaQuery(muiTheme.breakpoints.down(600));\n\n  useEffect(() => {\n    if (timer.id) {\n      clearInterval(timer.id);\n    }\n  }, [timer.id]);\n\n  const handleReset = useReset(true);\n\n  const totalErrors = useMemo(() => {\n    const total = {\n      errors: 0,\n      missingChars: 0,\n      incorrectChars: 0,\n      extraChars: 0,\n    };\n\n    Object.values(wpmData).forEach((value) => {\n      total.errors += value.errors;\n      total.missingChars += value.missingChars;\n      total.incorrectChars += value.incorrectChars;\n      total.extraChars += value.extraChars;\n    });\n    return total;\n  }, [wpmData]);\n\n  const accuracy = useMemo(() => {\n    return Math.max(\n      (wordBoxConfig.charCount - totalErrors.errors) / wordBoxConfig.charCount,\n      0\n    );\n  }, [wordBoxConfig.charCount, totalErrors]);\n\n  return (\n    <Container\n      sx={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Container\n        sx={{\n          color: theme.headings,\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box textAlign=\"center\" fontSize=\"clamp(1em, 4vw + .5em, 1.5em)\">\n          wpm:\n        </Box>\n        <MuiCustomTooltip Title=\"wpm with uncorrected errors\">\n          <Box textAlign=\"center\" fontSize=\"clamp(1em, 4vw + .5em, 2em)\">\n            {wpm.net}\n          </Box>\n        </MuiCustomTooltip>\n      </Container>\n      <Container\n        sx={{\n          color: theme.headings,\n          display: 'flex',\n          flexDirection: 'column',\n          marginBottom: '1em',\n        }}\n      >\n        <Box textAlign=\"center\" fontSize=\"clamp(1em, 5vw + .5em, 1.5em)\">\n          accuracy:\n        </Box>\n        <MuiCustomTooltip Title={`${(accuracy * 100).toFixed(2)}%`}>\n          <Box\n            textAlign=\"center\"\n            fontSize=\"clamp(1em, 5vw + .5em, 2em)\"\n          >{`${Math.round(Math.floor(accuracy * 100))}%`}</Box>\n        </MuiCustomTooltip>\n      </Container>\n      <Container\n        sx={{\n          backgroundColor: theme.wordBoxBackground,\n          padding: '2em 1em',\n          borderRadius: 2,\n          border: theme.border,\n        }}\n      >\n        <ResponsiveContainer width={'100%'} height={250}>\n          <ComposedChart\n            margin={{\n              top: 5,\n              right: 30,\n              left: 30,\n              bottom: 5,\n            }}\n            data={Object.values(wpmData)}\n          >\n            <CartesianGrid stroke={theme.cartesian || theme.words} />\n            <XAxis height={40} dataKey=\"wordNum\" stroke={theme.cartesian}>\n              <Label\n                value=\"words\"\n                fill={theme.graphText || theme.words}\n                position=\"insideBottom\"\n              />\n            </XAxis>\n            <YAxis\n              yAxisId=\"left\"\n              label={{\n                value: 'words per minute',\n                angle: -90,\n                dx: -20,\n                fill: theme.graphText || theme.words,\n              }}\n              stroke={theme.cartesian}\n            />\n            <YAxis\n              yAxisId=\"right\"\n              orientation=\"right\"\n              label={{\n                value: 'errors',\n                angle: 90,\n                dx: 5,\n                fill: theme.graphText || theme.words,\n              }}\n              dataKey=\"errors\"\n              allowDecimals={false}\n              stroke={theme.cartesian}\n              interval={0}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend\n              verticalAlign=\"top\"\n              wrapperStyle={{ paddingBottom: '1em' }}\n            />\n            <Line\n              name=\"raw\"\n              yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"wpm.raw\"\n              dot={false}\n              stroke={theme.lineColor2 || theme.headings}\n              strokeWidth={2}\n              legendType=\"plainline\"\n            />\n            <Line\n              name=\"wpm\"\n              yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"wpm.net\"\n              dot={false}\n              stroke={theme.lineColor}\n              strokeWidth={2}\n              legendType=\"plainline\"\n            />\n            <Scatter\n              name=\"errors\"\n              legendType=\"none\"\n              yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"errors\"\n              fill=\"red\"\n              shape={<CustomX />}\n            />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </Container>\n      <Container\n        sx={{\n          display: 'flex',\n          padding: 0,\n          marginTop: '1em',\n          justifyContent: 'center',\n        }}\n      >\n        <DataDisplay\n          title=\"raw\"\n          data={wpm.raw}\n          tooltip=\"wpm without uncorrected errors\"\n        />\n        <DataDisplay\n          title=\"characters\"\n          tooltip=\"typed / incorrect / missing / extra\"\n          data={`${wordBoxConfig.charCount} / ${totalErrors.incorrectChars} / ${totalErrors.missingChars} / ${totalErrors.extraChars}`}\n        />\n        <DataDisplay\n          title=\"time\"\n          data={settings.type === 'timed' ? timer._time : timer.time}\n          unit=\"s\"\n        />\n      </Container>\n      <Container\n        sx={{\n          color: theme.currentWord,\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <MuiCustomTooltip Title=\"restart test\">\n          <Button\n            sx={{ color: theme.buttonText || theme.currentWord }}\n            onClick={handleReset}\n          >\n            <ReplayIcon fontSize=\"large\" />\n          </Button>\n        </MuiCustomTooltip>\n      </Container>\n      {smallScreen ? (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            color: theme.headings,\n            margin: '1em 0',\n          }}\n        >\n          <Box>\n            <ScreenLockLandscapeIcon fontSize=\"large\" />\n            <ArrowRightAltIcon fontSize=\"large\" />\n            <KeyboardIcon fontSize=\"large\" />\n          </Box>\n          <Typography fontSize=\"1.2em\">\n            rotate device to view heatmap\n          </Typography>\n        </Box>\n      ) : (\n        <HeatMap />\n      )}\n    </Container>\n  );\n};\n\nexport default Stats;\n","import {\n  Button,\n  Dialog as MUIDialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport React, { FC, useContext } from 'react';\n\ninterface IProps {\n  open: boolean;\n  onClose: (e: React.MouseEvent<HTMLDivElement | HTMLButtonElement>) => void;\n  title: string;\n}\n\nconst Dialog: FC<IProps> = ({ open, onClose, title, children }) => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <MUIDialog\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: {\n          backgroundColor: theme.pageBackground,\n          color: theme.headings,\n          borderRadius: 3,\n        },\n      }}\n    >\n      <DialogTitle sx={{ fontSize: '1.5rem' }}>{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          sx={{ color: theme.headings, textTransform: 'lowercase' }}\n          onClick={onClose}\n        >\n          close\n        </Button>\n      </DialogActions>\n    </MUIDialog>\n  );\n};\n\nexport default Dialog;\n","import React, { FC } from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport CustomTooltip from 'components/CustomTooltip';\n\nconst SettingsWrapper: FC<{ title: string; tooltip?: string }> = ({\n  title,\n  children,\n  tooltip,\n}) => {\n  const renderTitle = () => {\n    const defaultTitle = (\n      <Typography sx={{ fontSize: '1.25rem', width: 'fit-content' }}>\n        {title}\n      </Typography>\n    );\n    if (!tooltip) return defaultTitle;\n    return <CustomTooltip Title={tooltip}>{defaultTitle}</CustomTooltip>;\n  };\n  return (\n    <>\n      {renderTitle()}\n      <Grid container spacing={0} sx={{ margin: '1em 0' }}>\n        {children}\n      </Grid>\n    </>\n  );\n};\n\nexport default SettingsWrapper;\n","import React, { useContext } from 'react';\nimport { Button, Grid } from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport useThemeList from 'providers/ThemeProvider/useThemeList';\nimport SettingsWrapper from './SettingsWrapper';\n\nconst Themes = () => {\n  const { themeName, setThemeName } = useContext(ThemeContext);\n\n  const themeList = useThemeList();\n  return (\n    <SettingsWrapper title=\"themes\">\n      {Object.keys(themeList).map((themeListItem) => {\n        const theme = themeList[themeListItem];\n        return (\n          <Grid item sm={3} xs={4} key={themeListItem}>\n            <div\n              style={{\n                padding: '.5em',\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundColor: themeListItem === themeName ? 'lightgray' : '',\n                borderRadius: 2,\n              }}\n            >\n              <Button\n                key={themeListItem}\n                disableRipple\n                sx={{\n                  padding: '1em 2em',\n                  background: theme.buttonBackground,\n                  color: theme.buttonText || theme.words,\n                  '&.MuiButtonBase-root:hover': {\n                    bgcolor: theme.buttonBackground,\n                    transform: 'scale(105%)',\n                  },\n                  textTransform: 'lowercase',\n                  border: theme.border || '',\n                  width: '100%',\n                }}\n                onClick={() => {\n                  setThemeName(themeListItem);\n                }}\n              >\n                {themeListItem}\n              </Button>\n            </div>\n          </Grid>\n        );\n      })}\n    </SettingsWrapper>\n  );\n};\n\nexport default Themes;\n","import MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { languageMap } from 'languages/wordListGenerator';\nimport { SettingsContext, ThemeContext } from 'providers';\nimport React, { useContext } from 'react';\nimport SettingsWrapper from './SettingsWrapper';\n\nconst Languages = () => {\n  const { settings, setSettings } = useContext(SettingsContext);\n  const { theme } = useContext(ThemeContext);\n  return (\n    <SettingsWrapper\n      title=\"language\"\n      tooltip=\"language applied to word and timed tests\"\n    >\n      <Select\n        sx={{\n          color: theme.headings,\n          '.MuiOutlinedInput-notchedOutline': {\n            borderColor: theme.headings,\n            opacity: 0.8,\n          },\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: theme.headings,\n            opacity: 1,\n          },\n        }}\n        value={settings.language}\n        onChange={(e) =>\n          setSettings((prev) => ({\n            ...prev,\n            language: e.target.value as keyof typeof languageMap,\n          }))\n        }\n      >\n        {Object.keys(languageMap).map((language) => (\n          <MenuItem key={language} value={language}>\n            {language}\n          </MenuItem>\n        ))}\n      </Select>\n    </SettingsWrapper>\n  );\n};\n\nexport default Languages;\n","import React, { FC } from 'react';\nimport Dialog from 'components/Dialog';\nimport Themes from './Themes';\nimport Languages from './Languages';\n\nexport interface IProps {\n  open: boolean;\n  onClose: (e: React.MouseEvent<HTMLDivElement | HTMLButtonElement>) => void;\n}\n\nconst Settings: FC<IProps> = ({ open, onClose }) => {\n  return (\n    <Dialog open={open} onClose={onClose} title={'settings'}>\n      <Themes />\n      <Languages />\n    </Dialog>\n  );\n};\n\nexport default Settings;\n","import React, { FC, useContext } from 'react';\nimport { IProps } from '../Settings';\nimport Dialog from 'components/Dialog';\nimport { IconButton } from '@mui/material';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport FolderSharedIcon from '@mui/icons-material/FolderShared';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport { ThemeContext } from 'providers';\n\nconst aboutMeLinks = [\n  {\n    Icon: <LinkedInIcon fontSize=\"inherit\" />,\n    link: 'https://www.linkedin.com/in/nick-kuek/',\n  },\n  { Icon: <GitHubIcon fontSize=\"inherit\" />, link: 'https://github.com/nkuek' },\n  { Icon: <FolderSharedIcon fontSize=\"inherit\" />, link: 'https://nkuek.dev/' },\n];\n\nconst AboutMe: FC<IProps> = ({ open, onClose }) => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Dialog open={open} onClose={onClose} title=\"about me\">\n      {aboutMeLinks.map(({ link, Icon }) => (\n        <IconButton\n          sx={{\n            color: theme.headings,\n            padding: 0,\n          }}\n          key={link}\n          size=\"large\"\n        >\n          <a\n            style={{\n              fontSize: '1.5em',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '100%',\n              height: '100%',\n              padding: '.5em',\n            }}\n            href={link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {Icon}\n          </a>\n        </IconButton>\n      ))}\n    </Dialog>\n  );\n};\n\nexport default AboutMe;\n","import React, { FC, useContext } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport { ThemeContext } from 'providers';\nimport { TReactSetState } from 'providers/general/types';\nimport { useFocus } from 'hooks';\n\ninterface IProps {\n  showTip: boolean;\n  setShowTip?: TReactSetState<boolean>;\n  tip: string;\n  warning?: boolean;\n}\n\nconst Tip: FC<IProps> = ({ showTip, setShowTip, tip, warning }) => {\n  const { theme } = useContext(ThemeContext);\n  const focus = useFocus();\n\n  if (!showTip) return null;\n\n  return (\n    <Container\n      sx={{\n        color: theme.headings,\n        filter: 'brightness(70%)',\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Typography\n        sx={{\n          cursor: 'pointer',\n          position: 'absolute',\n        }}\n        onClick={(e) => {\n          e.stopPropagation();\n          setShowTip && setShowTip(false);\n          focus();\n        }}\n      >\n        {`${warning ? 'warning' : 'tip'}: ${tip}`}\n      </Typography>\n    </Container>\n  );\n};\n\nexport default Tip;\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport WordBox from '../components/WordBox';\nimport Box from '@mui/material/Box';\nimport WordOptions from '../components/WordOptions';\nimport {\n  WordContext,\n  ThemeContext,\n  WordListContext,\n  InputContext,\n  SettingsContext,\n} from 'providers';\nimport Stats from 'components/Stats';\nimport { Container, Typography } from '@mui/material';\nimport Settings from 'components/Settings';\nimport { TReactSetState } from 'providers/general/types';\nimport AboutMe from 'components/AboutMe';\nimport Tip from 'components/Tip';\nimport { useFocus } from 'hooks';\n\nconst App = () => {\n  const { wordCount } = useContext(WordListContext);\n  const { wpmData } = useContext(WordContext);\n  const { theme } = useContext(ThemeContext);\n  const { timer } = useContext(InputContext);\n  const { setFocused, settings } = useContext(SettingsContext);\n\n  const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n  const [aboutMeOpen, setAboutMeOpen] = useState(false);\n  const [showTip, setShowTip] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n\n  const focus = useFocus();\n\n  const closeDialog = (\n    e: React.MouseEvent<HTMLDivElement | HTMLButtonElement>,\n    setDialog: TReactSetState<boolean>\n  ) => {\n    e.stopPropagation();\n    setDialog(false);\n    setTimeout(() => {\n      focus();\n    }, 1);\n  };\n\n  // handle pressing escape\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape')\n        document.getElementsByTagName('button')[0].click();\n      setShowTip(false);\n    };\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [setShowTip]);\n\n  const gradientUnderline = useCallback(\n    (dialogOpen) => ({\n      backgroundImage: `linear-gradient(90deg, ${\n        (theme.gradientUnderline && theme.gradientUnderline[0]) || 'red'\n      }, ${(theme.gradientUnderline && theme.gradientUnderline[1]) || 'blue'})`,\n      backgroundSize: `${dialogOpen ? 100 : 0}% 3px`,\n      backgroundPosition: 'left bottom',\n      backgroundRepeat: 'no-repeat',\n      transition: 'background-size 300ms ease-in-out',\n      '&:hover': {\n        backgroundSize: '100% 3px',\n      },\n    }),\n    [theme]\n  );\n\n  const displayStats =\n    (settings.type === 'timed' && timer.time === 0) ||\n    (settings.type !== 'timed' && Object.keys(wpmData).length === wordCount);\n\n  return (\n    <div\n      style={{\n        fontFamily: 'Roboto',\n        background: theme.pageBackground,\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      onClick={() => setFocused(false)}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 40,\n          fontSize: 'clamp(2rem, 5vw + .5rem, 3rem)',\n          color: theme.headings || theme.currentWord,\n          padding: '1rem 0',\n        }}\n      >\n        archetyper\n      </Box>\n      <Container\n        sx={{\n          height: 'calc(100% - 80px)',\n          display: 'flex',\n          alignItems: displayStats ? 'start' : 'center',\n          justifyContent: 'center',\n          padding: 0,\n          position: 'relative',\n          overflow: 'auto',\n        }}\n      >\n        {displayStats ? (\n          <Stats />\n        ) : (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '75%',\n              minHeight: '30%',\n              top: -64,\n              position: 'relative',\n            }}\n          >\n            <WordOptions />\n            <WordBox setShowTip={setShowTip} setShowWarning={setShowWarning} />\n            <Tip\n              showTip={showTip}\n              setShowTip={setShowTip}\n              tip=\"press esc at any time to restart\"\n            />\n            <Tip\n              showTip={showWarning}\n              setShowTip={setShowWarning}\n              tip=\"caps lock is enabled\"\n              warning\n            />\n          </Box>\n        )}\n      </Container>\n      <Container\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: 40,\n          fontSize: 'clamp(1rem, 5vw + .25rem, 1.5rem)',\n          color: theme.headings || theme.currentWord,\n        }}\n      >\n        <Typography\n          onClick={() => setSettingsDialogOpen(true)}\n          sx={{\n            ...gradientUnderline(settingsDialogOpen),\n            cursor: 'pointer',\n            fontSize: 'inherit',\n          }}\n        >\n          settings\n        </Typography>\n        <Typography\n          sx={{\n            margin: '0 .5em',\n            fontSize: 'inherit',\n          }}\n        >\n          /\n        </Typography>\n        <Typography\n          onClick={() => setAboutMeOpen(true)}\n          sx={{\n            ...gradientUnderline(aboutMeOpen),\n            cursor: 'pointer',\n            fontSize: 'inherit',\n          }}\n        >\n          about me\n        </Typography>\n      </Container>\n      <Settings\n        open={settingsDialogOpen}\n        onClose={(e) => closeDialog(e, setSettingsDialogOpen)}\n      />\n      <AboutMe\n        open={aboutMeOpen}\n        onClose={(e) => closeDialog(e, setAboutMeOpen)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport {\n  ThemeProvider,\n  WordProvider,\n  WordListProvider,\n  IndexProvider,\n  InputProvider,\n  SettingsProvider,\n} from 'providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WordListProvider>\n      <IndexProvider>\n        <WordProvider>\n          <ThemeProvider>\n            <SettingsProvider>\n              <InputProvider>\n                <App />\n              </InputProvider>\n            </SettingsProvider>\n          </ThemeProvider>\n        </WordProvider>\n      </IndexProvider>\n    </WordListProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}